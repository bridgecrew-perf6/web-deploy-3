{"version":3,"sources":["../node_modules/@babel/runtime/helpers/esm/inherits.js","../node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","../node_modules/@babel/runtime/helpers/esm/createSuper.js","../node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct.js","../node_modules/@mui/icons-material/Close.js","../node_modules/@mui/material/DialogTitle/dialogTitleClasses.js","../node_modules/@mui/icons-material/Person.js","../node_modules/@mui/icons-material/Add.js","../node_modules/@mui/material/DialogActions/dialogActionsClasses.js","../node_modules/@mui/material/DialogActions/DialogActions.js","../node_modules/@mui/material/DialogContent/dialogContentClasses.js","../node_modules/@mui/material/DialogContent/DialogContent.js","../node_modules/@mui/material/ListItemAvatar/listItemAvatarClasses.js","../node_modules/@mui/material/ListItemAvatar/ListItemAvatar.js","../node_modules/@mui/material/DialogTitle/DialogTitle.js","app/views/material-kit/dialog/SimpleDialog.jsx","../node_modules/@mui/material/DialogContentText/dialogContentTextClasses.js","../node_modules/@mui/material/DialogContentText/DialogContentText.js","app/views/material-kit/dialog/SimpleAlerts.jsx","app/views/material-kit/dialog/DialogTransition.jsx","app/views/material-kit/dialog/FormDialog.jsx","app/views/material-kit/dialog/CustomizedDialog.jsx","app/views/material-kit/dialog/FullScreenDialog.jsx","app/views/material-kit/dialog/OptimalSizeDialog.jsx","app/views/material-kit/dialog/ResponsiveDialog.jsx","app/views/material-kit/dialog/ConfirmationDialog.jsx","app/views/material-kit/dialog/AppDialog.jsx"],"names":["_inherits","subClass","superClass","TypeError","prototype","Object","create","constructor","value","writable","configurable","defineProperty","_getPrototypeOf","o","setPrototypeOf","getPrototypeOf","__proto__","_possibleConstructorReturn","self","call","assertThisInitialized","_createSuper","Derived","hasNativeReflectConstruct","Reflect","construct","sham","Proxy","Boolean","valueOf","e","result","Super","NewTarget","this","arguments","apply","_interopRequireDefault","require","exports","default","_createSvgIcon","_jsxRuntime","_default","jsx","d","getDialogTitleUtilityClass","slot","generateUtilityClass","dialogTitleClasses","generateUtilityClasses","getDialogActionsUtilityClass","_excluded","DialogActionsRoot","styled","name","overridesResolver","props","styles","ownerState","root","disableSpacing","spacing","_extends","display","alignItems","padding","justifyContent","flex","marginLeft","DialogActions","React","inProps","ref","useThemeProps","className","other","_objectWithoutPropertiesLoose","classes","slots","composeClasses","useUtilityClasses","_jsx","clsx","getDialogContentUtilityClass","DialogContentRoot","dividers","theme","WebkitOverflowScrolling","overflowY","borderTop","vars","palette","divider","borderBottom","paddingTop","DialogContent","getListItemAvatarUtilityClass","ListItemAvatarRoot","alignItemsFlexStart","minWidth","flexShrink","marginTop","ListItemAvatar","context","ListContext","DialogTitleRoot","Typography","DialogTitle","idProp","id","DialogContext","titleId","component","variant","emails","SimpleDialog","onClose","selectedValue","handleListItemClick","Dialog","List","map","email","ListItem","button","onClick","Avatar","sx","backgroundColor","blue","color","ListItemText","primary","SimpleDialogDemo","useState","open","setOpen","setSelectedValue","Button","getDialogContentTextUtilityClass","DialogContentTextRoot","shouldForwardProp","prop","rootShouldForwardProp","DialogContentText","composedClasses","AlertDialog","handleClose","autoFocus","Transition","forwardRef","Slide","direction","AlertDialogSlide","TransitionComponent","keepMounted","FormDialog","TextField","margin","label","type","fullWidth","MuiDialogTitle","position","right","top","grey","children","disableTypography","IconButton","MuiDialogContent","MuiDialogActions","CustomizedDialogs","state","handleClickOpen","setState","gutterBottom","Component","FullScreenDialog","useTheme","fullScreen","AppBar","Toolbar","edge","secondary","Divider","DialogRoot","flexDirection","width","MaxWidthDialog","setFullWidth","maxWidth","setMaxWidth","noValidate","FormControl","InputLabel","htmlFor","Select","onChange","event","target","inputProps","MenuItem","FormControlLabel","control","Switch","checked","ResponsiveDialog","useMediaQuery","breakpoints","down","options","ConfirmationDialogRaw","valueProp","setValue","radioGroupRef","useRef","useEffect","disableEscapeKeyDown","TransitionProps","onEntering","current","focus","RadioGroup","newValue","option","Radio","background","paper","maxHeight","ConfirmationDialog","role","disabled","Container","marginBottom","AppDialog","routeSegments","path","title","Box","py","CustomizedDialog"],"mappings":"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","file":"static/js/15.103afb04.chunk.js","sourcesContent":["import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","import _typeof from \"./typeof.js\";\nimport assertThisInitialized from \"./assertThisInitialized.js\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n\n  return assertThisInitialized(self);\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nimport isNativeReflectConstruct from \"./isNativeReflectConstruct.js\";\nimport possibleConstructorReturn from \"./possibleConstructorReturn.js\";\nexport default function _createSuper(Derived) {\n  var hasNativeReflectConstruct = isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return possibleConstructorReturn(this, result);\n  };\n}","export default function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 6.41 17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Close');\n\nexports.default = _default;","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getDialogTitleUtilityClass(slot) {\n  return generateUtilityClass('MuiDialogTitle', slot);\n}\nconst dialogTitleClasses = generateUtilityClasses('MuiDialogTitle', ['root']);\nexport default dialogTitleClasses;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z\"\n}), 'Person');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n}), 'Add');\n\nexports.default = _default;","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getDialogActionsUtilityClass(slot) {\n  return generateUtilityClass('MuiDialogActions', slot);\n}\nconst dialogActionsClasses = generateUtilityClasses('MuiDialogActions', ['root', 'spacing']);\nexport default dialogActionsClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"disableSpacing\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getDialogActionsUtilityClass } from './dialogActionsClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disableSpacing\n  } = ownerState;\n  const slots = {\n    root: ['root', !disableSpacing && 'spacing']\n  };\n  return composeClasses(slots, getDialogActionsUtilityClass, classes);\n};\n\nconst DialogActionsRoot = styled('div', {\n  name: 'MuiDialogActions',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, !ownerState.disableSpacing && styles.spacing];\n  }\n})(({\n  ownerState\n}) => _extends({\n  display: 'flex',\n  alignItems: 'center',\n  padding: 8,\n  justifyContent: 'flex-end',\n  flex: '0 0 auto'\n}, !ownerState.disableSpacing && {\n  '& > :not(:first-of-type)': {\n    marginLeft: 8\n  }\n}));\nconst DialogActions = /*#__PURE__*/React.forwardRef(function DialogActions(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiDialogActions'\n  });\n\n  const {\n    className,\n    disableSpacing = false\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    disableSpacing\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(DialogActionsRoot, _extends({\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? DialogActions.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the actions do not have additional margin.\n   * @default false\n   */\n  disableSpacing: PropTypes.bool,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default DialogActions;","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getDialogContentUtilityClass(slot) {\n  return generateUtilityClass('MuiDialogContent', slot);\n}\nconst dialogContentClasses = generateUtilityClasses('MuiDialogContent', ['root', 'dividers']);\nexport default dialogContentClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"dividers\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getDialogContentUtilityClass } from './dialogContentClasses';\nimport dialogTitleClasses from '../DialogTitle/dialogTitleClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    dividers\n  } = ownerState;\n  const slots = {\n    root: ['root', dividers && 'dividers']\n  };\n  return composeClasses(slots, getDialogContentUtilityClass, classes);\n};\n\nconst DialogContentRoot = styled('div', {\n  name: 'MuiDialogContent',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.dividers && styles.dividers];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  flex: '1 1 auto',\n  // Add iOS momentum scrolling for iOS < 13.0\n  WebkitOverflowScrolling: 'touch',\n  overflowY: 'auto',\n  padding: '20px 24px'\n}, ownerState.dividers ? {\n  padding: '16px 24px',\n  borderTop: `1px solid ${(theme.vars || theme).palette.divider}`,\n  borderBottom: `1px solid ${(theme.vars || theme).palette.divider}`\n} : {\n  [`.${dialogTitleClasses.root} + &`]: {\n    paddingTop: 0\n  }\n}));\nconst DialogContent = /*#__PURE__*/React.forwardRef(function DialogContent(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiDialogContent'\n  });\n\n  const {\n    className,\n    dividers = false\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    dividers\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(DialogContentRoot, _extends({\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? DialogContent.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * Display the top and bottom dividers.\n   * @default false\n   */\n  dividers: PropTypes.bool,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default DialogContent;","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getListItemAvatarUtilityClass(slot) {\n  return generateUtilityClass('MuiListItemAvatar', slot);\n}\nconst listItemAvatarClasses = generateUtilityClasses('MuiListItemAvatar', ['root', 'alignItemsFlexStart']);\nexport default listItemAvatarClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport ListContext from '../List/ListContext';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getListItemAvatarUtilityClass } from './listItemAvatarClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    alignItems,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', alignItems === 'flex-start' && 'alignItemsFlexStart']\n  };\n  return composeClasses(slots, getListItemAvatarUtilityClass, classes);\n};\n\nconst ListItemAvatarRoot = styled('div', {\n  name: 'MuiListItemAvatar',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.alignItems === 'flex-start' && styles.alignItemsFlexStart];\n  }\n})(({\n  ownerState\n}) => _extends({\n  minWidth: 56,\n  flexShrink: 0\n}, ownerState.alignItems === 'flex-start' && {\n  marginTop: 8\n}));\n/**\n * A simple wrapper to apply `List` styles to an `Avatar`.\n */\n\nconst ListItemAvatar = /*#__PURE__*/React.forwardRef(function ListItemAvatar(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiListItemAvatar'\n  });\n\n  const {\n    className\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const context = React.useContext(ListContext);\n\n  const ownerState = _extends({}, props, {\n    alignItems: context.alignItems\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(ListItemAvatarRoot, _extends({\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? ListItemAvatar.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component, normally an `Avatar`.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default ListItemAvatar;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"id\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport Typography from '../Typography';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getDialogTitleUtilityClass } from './dialogTitleClasses';\nimport DialogContext from '../Dialog/DialogContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getDialogTitleUtilityClass, classes);\n};\n\nconst DialogTitleRoot = styled(Typography, {\n  name: 'MuiDialogTitle',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  padding: '16px 24px',\n  flex: '0 0 auto'\n});\nconst DialogTitle = /*#__PURE__*/React.forwardRef(function DialogTitle(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiDialogTitle'\n  });\n\n  const {\n    className,\n    id: idProp\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = props;\n  const classes = useUtilityClasses(ownerState);\n  const {\n    titleId: id = idProp\n  } = React.useContext(DialogContext);\n  return /*#__PURE__*/_jsx(DialogTitleRoot, _extends({\n    component: \"h2\",\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref,\n    variant: \"h6\",\n    id: id\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? DialogTitle.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  id: PropTypes.string,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default DialogTitle;","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Button from '@mui/material/Button'\nimport Avatar from '@mui/material/Avatar'\nimport List from '@mui/material/List'\nimport ListItem from '@mui/material/ListItem'\nimport ListItemAvatar from '@mui/material/ListItemAvatar'\nimport ListItemText from '@mui/material/ListItemText'\nimport DialogTitle from '@mui/material/DialogTitle'\nimport Dialog from '@mui/material/Dialog'\nimport PersonIcon from '@mui/icons-material/Person'\nimport AddIcon from '@mui/icons-material/Add'\nimport Typography from '@mui/material/Typography'\nimport { blue } from '@mui/material/colors'\n\nconst emails = ['username@gmail.com', 'user02@gmail.com']\n\nfunction SimpleDialog(props) {\n    const { onClose, selectedValue, ...other } = props\n\n    function handleClose() {\n        onClose(selectedValue)\n    }\n    function handleListItemClick(value) {\n        onClose(value)\n    }\n\n    return (\n        <Dialog\n            onClose={handleClose}\n            aria-labelledby=\"simple-dialog-title\"\n            {...other}\n        >\n            <DialogTitle id=\"simple-dialog-title\">\n                Set backup account\n            </DialogTitle>\n            <List>\n                {emails.map((email) => (\n                    <ListItem\n                        button\n                        onClick={() => handleListItemClick(email)}\n                        key={email}\n                    >\n                        <ListItemAvatar>\n                            <Avatar\n                                sx={{\n                                    backgroundColor: blue[100],\n                                    color: blue[600],\n                                }}\n                            >\n                                <PersonIcon />\n                            </Avatar>\n                        </ListItemAvatar>\n                        <ListItemText primary={email} />\n                    </ListItem>\n                ))}\n\n                <ListItem\n                    button\n                    onClick={() => handleListItemClick('addAccount')}\n                >\n                    <ListItemAvatar>\n                        <Avatar>\n                            <AddIcon />\n                        </Avatar>\n                    </ListItemAvatar>\n                    <ListItemText primary=\"add account\" />\n                </ListItem>\n            </List>\n        </Dialog>\n    )\n}\n\nSimpleDialog.propTypes = {\n    onClose: PropTypes.func,\n    open: PropTypes.bool,\n    selectedValue: PropTypes.string,\n}\n\nexport default function SimpleDialogDemo() {\n    const [open, setOpen] = React.useState(false)\n    const [selectedValue, setSelectedValue] = React.useState(emails[1])\n\n    function handleClickOpen() {\n        setOpen(true)\n    }\n\n    const handleClose = (value) => {\n        setOpen(false)\n        setSelectedValue(value)\n    }\n\n    return (\n        <div>\n            <Typography variant=\"subtitle1\">\n                Selected: {selectedValue}\n            </Typography>\n            <br />\n            <Button\n                variant=\"outlined\"\n                color=\"primary\"\n                onClick={handleClickOpen}\n            >\n                Open simple dialog\n            </Button>\n            <SimpleDialog\n                selectedValue={selectedValue}\n                open={open}\n                onClose={handleClose}\n            />\n        </div>\n    )\n}\n","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getDialogContentTextUtilityClass(slot) {\n  return generateUtilityClass('MuiDialogContentText', slot);\n}\nconst dialogContentTextClasses = generateUtilityClasses('MuiDialogContentText', ['root']);\nexport default dialogContentTextClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"children\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled, { rootShouldForwardProp } from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport Typography from '../Typography';\nimport { getDialogContentTextUtilityClass } from './dialogContentTextClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  const composedClasses = composeClasses(slots, getDialogContentTextUtilityClass, classes);\n  return _extends({}, classes, composedClasses);\n};\n\nconst DialogContentTextRoot = styled(Typography, {\n  shouldForwardProp: prop => rootShouldForwardProp(prop) || prop === 'classes',\n  name: 'MuiDialogContentText',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({});\nconst DialogContentText = /*#__PURE__*/React.forwardRef(function DialogContentText(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiDialogContentText'\n  });\n\n  const ownerState = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(DialogContentTextRoot, _extends({\n    component: \"p\",\n    variant: \"body1\",\n    color: \"text.secondary\",\n    ref: ref,\n    ownerState: ownerState\n  }, props, {\n    classes: classes\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? DialogContentText.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default DialogContentText;","import React from 'react'\nimport Button from '@mui/material/Button'\nimport Dialog from '@mui/material/Dialog'\nimport DialogTitle from '@mui/material/DialogTitle'\nimport DialogActions from '@mui/material/DialogActions'\nimport DialogContent from '@mui/material/DialogContent'\nimport DialogContentText from '@mui/material/DialogContentText'\n\nexport default function AlertDialog() {\n    const [open, setOpen] = React.useState(false)\n\n    function handleClickOpen() {\n        setOpen(true)\n    }\n\n    function handleClose() {\n        setOpen(false)\n    }\n\n    return (\n        <div>\n            <Button\n                variant=\"outlined\"\n                color=\"primary\"\n                onClick={handleClickOpen}\n            >\n                Open alert dialog\n            </Button>\n            <Dialog\n                open={open}\n                onClose={handleClose}\n                aria-labelledby=\"alert-dialog-title\"\n                aria-describedby=\"alert-dialog-description\"\n            >\n                <DialogTitle id=\"alert-dialog-title\">\n                    {\"Use Google's location service?\"}\n                </DialogTitle>\n                <DialogContent>\n                    <DialogContentText id=\"alert-dialog-description\">\n                        Let Google help apps determine location. This means\n                        sending anonymous location data to Google, even when no\n                        apps are running.\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleClose} color=\"primary\">\n                        Disagree\n                    </Button>\n                    <Button onClick={handleClose} color=\"primary\" autoFocus>\n                        Agree\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    )\n}\n","import React from 'react'\nimport Button from '@mui/material/Button'\nimport Dialog from '@mui/material/Dialog'\nimport DialogActions from '@mui/material/DialogActions'\nimport DialogContent from '@mui/material/DialogContent'\nimport DialogContentText from '@mui/material/DialogContentText'\nimport DialogTitle from '@mui/material/DialogTitle'\nimport Slide from '@mui/material/Slide'\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n    return <Slide direction=\"up\" ref={ref} {...props} />\n})\n\nexport default function AlertDialogSlide() {\n    const [open, setOpen] = React.useState(false)\n\n    function handleClickOpen() {\n        setOpen(true)\n    }\n\n    function handleClose() {\n        setOpen(false)\n    }\n\n    return (\n        <div>\n            <Button\n                variant=\"outlined\"\n                color=\"primary\"\n                onClick={handleClickOpen}\n            >\n                Slide in alert dialog\n            </Button>\n            <Dialog\n                open={open}\n                TransitionComponent={Transition}\n                keepMounted\n                onClose={handleClose}\n                aria-labelledby=\"alert-dialog-slide-title\"\n                aria-describedby=\"alert-dialog-slide-description\"\n            >\n                <DialogTitle id=\"alert-dialog-slide-title\">\n                    {\"Use Google's location service?\"}\n                </DialogTitle>\n                <DialogContent>\n                    <DialogContentText id=\"alert-dialog-slide-description\">\n                        Let Google help apps determine location. This means\n                        sending anonymous location data to Google, even when no\n                        apps are running.\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleClose} color=\"primary\">\n                        Disagree\n                    </Button>\n                    <Button onClick={handleClose} color=\"primary\">\n                        Agree\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    )\n}\n","import React from 'react'\nimport Button from '@mui/material/Button'\nimport TextField from '@mui/material/TextField'\nimport Dialog from '@mui/material/Dialog'\nimport DialogActions from '@mui/material/DialogActions'\nimport DialogContent from '@mui/material/DialogContent'\nimport DialogContentText from '@mui/material/DialogContentText'\nimport DialogTitle from '@mui/material/DialogTitle'\n\nexport default function FormDialog() {\n    const [open, setOpen] = React.useState(false)\n\n    function handleClickOpen() {\n        setOpen(true)\n    }\n\n    function handleClose() {\n        setOpen(false)\n    }\n\n    return (\n        <div>\n            <Button\n                variant=\"outlined\"\n                color=\"primary\"\n                onClick={handleClickOpen}\n            >\n                Open form dialog\n            </Button>\n            <Dialog\n                open={open}\n                onClose={handleClose}\n                aria-labelledby=\"form-dialog-title\"\n            >\n                <DialogTitle id=\"form-dialog-title\">Subscribe</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        To subscribe to this website, please enter your email\n                        address here. We will send updates occasionally.\n                    </DialogContentText>\n                    <TextField\n                        autoFocus\n                        margin=\"dense\"\n                        id=\"name\"\n                        label=\"Email Address\"\n                        type=\"email\"\n                        fullWidth\n                    />\n                </DialogContent>\n                <DialogActions>\n                    <Button\n                        variant=\"outlined\"\n                        color=\"secondary\"\n                        onClick={handleClose}\n                    >\n                        Cancel\n                    </Button>\n                    <Button onClick={handleClose} color=\"primary\">\n                        Subscribe\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    )\n}\n","import React from 'react'\nimport { styled } from '@mui/system'\nimport Button from '@mui/material/Button'\nimport Dialog from '@mui/material/Dialog'\nimport CloseIcon from '@mui/icons-material/Close'\nimport IconButton from '@mui/material/IconButton'\nimport Typography from '@mui/material/Typography'\nimport MuiDialogTitle from '@mui/material/DialogTitle'\nimport MuiDialogContent from '@mui/material/DialogContent'\nimport MuiDialogActions from '@mui/material/DialogActions'\n\nconst DialogTitleRoot = styled(MuiDialogTitle)(({ theme }) => ({\n    margin: 0,\n    padding: theme.spacing(2),\n    '& .closeButton': {\n        position: 'absolute',\n        right: theme.spacing(1),\n        top: theme.spacing(1),\n        color: theme.palette.grey[500],\n    },\n}))\n\nconst DialogTitle = ((props) => {\n    const { children, onClose } = props\n    return (\n        <DialogTitleRoot disableTypography>\n            <Typography variant=\"h6\">{children}</Typography>\n            {onClose ? (\n                <IconButton\n                    aria-label=\"Close\"\n                    className='closeButton'\n                    onClick={onClose}\n                >\n                    <CloseIcon />\n                </IconButton>\n            ) : null}\n        </DialogTitleRoot>\n    )\n})\n\nconst DialogContent = styled(MuiDialogContent)(({ theme }) => ({\n    \"&.root\": {\n        padding: theme.spacing(2),\n    },\n}))\n\nconst DialogActions = styled(MuiDialogActions)(({ theme }) => ({\n    '&.root': {\n        margin: 0,\n        padding: theme.spacing(1),\n    },\n}))\n\nclass CustomizedDialogs extends React.Component {\n    state = {\n        open: false,\n    }\n\n    handleClickOpen = () => {\n        this.setState({\n            open: true,\n        })\n    }\n\n    handleClose = () => {\n        this.setState({ open: false })\n    }\n\n    render() {\n        return (\n            <div>\n                <Button\n                    variant=\"outlined\"\n                    color=\"secondary\"\n                    onClick={this.handleClickOpen}\n                >\n                    Open dialog\n                </Button>\n                <Dialog\n                    onClose={this.handleClose}\n                    aria-labelledby=\"customized-dialog-title\"\n                    open={this.state.open}\n                >\n                    <DialogTitle\n                        id=\"customized-dialog-title\"\n                        onClose={this.handleClose}\n                    >\n                        Modal title\n                    </DialogTitle>\n                    <DialogContent dividers>\n                        <Typography gutterBottom>\n                            Cras mattis consectetur purus sit amet fermentum.\n                            Cras justo odio, dapibus ac facilisis in, egestas\n                            eget quam. Morbi leo risus, porta ac consectetur ac,\n                            vestibulum at eros.\n                        </Typography>\n                        <Typography gutterBottom>\n                            Praesent commodo cursus magna, vel scelerisque nisl\n                            consectetur et. Vivamus sagittis lacus vel augue\n                            laoreet rutrum faucibus dolor auctor.\n                        </Typography>\n                        <Typography gutterBottom>\n                            Aenean lacinia bibendum nulla sed consectetur.\n                            Praesent commodo cursus magna, vel scelerisque nisl\n                            consectetur et. Donec sed odio dui. Donec\n                            ullamcorper nulla non metus auctor fringilla.\n                        </Typography>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClose} color=\"primary\">\n                            Save changes\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        )\n    }\n}\n\nexport default CustomizedDialogs\n","import React from 'react'\nimport Button from '@mui/material/Button'\nimport Dialog from '@mui/material/Dialog'\nimport ListItemText from '@mui/material/ListItemText'\nimport ListItem from '@mui/material/ListItem'\nimport List from '@mui/material/List'\nimport Divider from '@mui/material/Divider'\nimport AppBar from '@mui/material/AppBar'\nimport Toolbar from '@mui/material/Toolbar'\nimport IconButton from '@mui/material/IconButton'\nimport CloseIcon from '@mui/icons-material/Close'\nimport Slide from '@mui/material/Slide'\nimport { H6 } from 'app/components/Typography'\nimport { useTheme } from '@mui/system'\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n    return <Slide direction=\"up\" ref={ref} {...props} />\n})\n\nexport default function FullScreenDialog() {\n    const theme = useTheme()\n    const [open, setOpen] = React.useState(false)\n\n    function handleClickOpen() {\n        setOpen(true)\n    }\n    function handleClose() {\n        setOpen(false)\n    }\n\n    return (\n        <div>\n            <Button\n                variant=\"outlined\"\n                color=\"primary\"\n                onClick={handleClickOpen}\n            >\n                Open full-screen dialog\n            </Button>\n            <Dialog\n                fullScreen\n                open={open}\n                onClose={handleClose}\n                TransitionComponent={Transition}\n            >\n                <AppBar sx={{ position: 'relative' }}>\n                    <Toolbar>\n                        <IconButton\n                            edge=\"start\"\n                            color=\"inherit\"\n                            onClick={handleClose}\n                            aria-label=\"Close\"\n                        >\n                            <CloseIcon />\n                        </IconButton>\n                        <H6\n                            sx={{\n                                flex: 1,\n                                marginLeft: theme.spacing(2),\n                            }}\n                        >\n                            Sound\n                        </H6>\n                        <Button color=\"inherit\" onClick={handleClose}>\n                            save\n                        </Button>\n                    </Toolbar>\n                </AppBar>\n                <List>\n                    <ListItem button>\n                        <ListItemText\n                            primary=\"Phone ringtone\"\n                            secondary=\"Titania\"\n                        />\n                    </ListItem>\n                    <Divider />\n                    <ListItem button>\n                        <ListItemText\n                            primary=\"Default notification ringtone\"\n                            secondary=\"Tethys\"\n                        />\n                    </ListItem>\n                </List>\n            </Dialog>\n        </div>\n    )\n}\n","import React from 'react'\nimport { styled } from '@mui/system'\nimport Button from '@mui/material/Button'\nimport Dialog from '@mui/material/Dialog'\nimport Select from '@mui/material/Select'\nimport Switch from '@mui/material/Switch'\nimport MenuItem from '@mui/material/MenuItem'\nimport InputLabel from '@mui/material/InputLabel'\nimport DialogTitle from '@mui/material/DialogTitle'\nimport FormControl from '@mui/material/FormControl'\nimport DialogActions from '@mui/material/DialogActions'\nimport DialogContent from '@mui/material/DialogContent'\nimport FormControlLabel from '@mui/material/FormControlLabel'\nimport DialogContentText from '@mui/material/DialogContentText'\n\nconst DialogRoot = styled('div')(({ theme }) => ({\n    '& form': {\n        display: 'flex',\n        flexDirection: 'column',\n        margin: 'auto',\n        width: 'fit-content',\n    },\n    '& .formControl': {\n        marginTop: theme.spacing(2),\n        minWidth: 120,\n    },\n    '& .formControlLabel': {\n        marginTop: theme.spacing(1),\n    },\n}))\n\nexport default function MaxWidthDialog() {\n    const [open, setOpen] = React.useState(false)\n    const [fullWidth, setFullWidth] = React.useState(true)\n    const [maxWidth, setMaxWidth] = React.useState('sm')\n\n    function handleClickOpen() {\n        setOpen(true)\n    }\n    function handleClose() {\n        setOpen(false)\n    }\n    function handleMaxWidthChange(event) {\n        setMaxWidth(event.target.value)\n    }\n    function handleFullWidthChange(event) {\n        setFullWidth(event.target.checked)\n    }\n\n    return (\n        <DialogRoot>\n            <Button\n                variant=\"outlined\"\n                color=\"primary\"\n                onClick={handleClickOpen}\n            >\n                Open max-width dialog\n            </Button>\n            <Dialog\n                fullWidth={fullWidth}\n                maxWidth={maxWidth}\n                open={open}\n                onClose={handleClose}\n                aria-labelledby=\"max-width-dialog-title\"\n            >\n                <DialogTitle id=\"max-width-dialog-title\">\n                    Optional sizes\n                </DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        You can set my maximum width and whether to adapt or\n                        not.\n                    </DialogContentText>\n                    <form noValidate>\n                        <FormControl className='formControl'>\n                            <InputLabel htmlFor=\"max-width\">\n                                maxWidth\n                            </InputLabel>\n                            <Select\n                                value={maxWidth}\n                                onChange={handleMaxWidthChange}\n                                inputProps={{\n                                    name: 'max-width',\n                                    id: 'max-width',\n                                }}\n                            >\n                                <MenuItem value={false}>false</MenuItem>\n                                <MenuItem value=\"xs\">xs</MenuItem>\n                                <MenuItem value=\"sm\">sm</MenuItem>\n                                <MenuItem value=\"md\">md</MenuItem>\n                                <MenuItem value=\"lg\">lg</MenuItem>\n                                <MenuItem value=\"xl\">xl</MenuItem>\n                            </Select>\n                        </FormControl>\n                        <FormControlLabel\n                            className='formControlLabel'\n                            control={\n                                <Switch\n                                    checked={fullWidth}\n                                    onChange={handleFullWidthChange}\n                                    value=\"fullWidth\"\n                                />\n                            }\n                            label=\"Full width\"\n                        />\n                    </form>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleClose} color=\"primary\">\n                        Close\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </DialogRoot>\n    )\n}\n","import React from 'react'\nimport { useTheme } from '@mui/system'\nimport Button from '@mui/material/Button'\nimport Dialog from '@mui/material/Dialog'\nimport DialogTitle from '@mui/material/DialogTitle'\nimport DialogActions from '@mui/material/DialogActions'\nimport DialogContent from '@mui/material/DialogContent'\nimport useMediaQuery from '@mui/material/useMediaQuery'\nimport DialogContentText from '@mui/material/DialogContentText'\n\nexport default function ResponsiveDialog() {\n    const [open, setOpen] = React.useState(false)\n    const theme = useTheme()\n    const fullScreen = useMediaQuery(theme.breakpoints.down('sm'))\n\n    function handleClickOpen() {\n        setOpen(true)\n    }\n\n    function handleClose() {\n        setOpen(false)\n    }\n\n    return (\n        <div>\n            <Button\n                variant=\"outlined\"\n                color=\"primary\"\n                onClick={handleClickOpen}\n            >\n                Open responsive dialog\n            </Button>\n            <Dialog\n                fullScreen={fullScreen}\n                open={open}\n                onClose={handleClose}\n                aria-labelledby=\"responsive-dialog-title\"\n            >\n                <DialogTitle id=\"responsive-dialog-title\">\n                    {\"Use Google's location service?\"}\n                </DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        Let Google help apps determine location. This means\n                        sending anonymous location data to Google, even when no\n                        apps are running.\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleClose} color=\"primary\">\n                        Disagree\n                    </Button>\n                    <Button onClick={handleClose} color=\"primary\" autoFocus>\n                        Agree\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    )\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Button from '@mui/material/Button'\nimport List from '@mui/material/List'\nimport ListItem from '@mui/material/ListItem'\nimport ListItemText from '@mui/material/ListItemText'\nimport DialogTitle from '@mui/material/DialogTitle'\nimport DialogContent from '@mui/material/DialogContent'\nimport DialogActions from '@mui/material/DialogActions'\nimport Dialog from '@mui/material/Dialog'\nimport RadioGroup from '@mui/material/RadioGroup'\nimport Radio from '@mui/material/Radio'\nimport FormControlLabel from '@mui/material/FormControlLabel'\nimport { styled } from '@mui/system'\n\nconst options = [\n    'None',\n    'Atria',\n    'Callisto',\n    'Dione',\n    'Ganymede',\n    'Hangouts Call',\n    'Luna',\n    'Oberon',\n    'Phobos',\n    'Pyxis',\n    'Sedna',\n    'Titania',\n    'Triton',\n    'Umbriel',\n]\n\nfunction ConfirmationDialogRaw(props) {\n    const { onClose, value: valueProp, open, ...other } = props\n    const [value, setValue] = React.useState(valueProp)\n    const radioGroupRef = React.useRef(null)\n\n    React.useEffect(() => {\n        if (!open) {\n            setValue(valueProp)\n        }\n    }, [valueProp, open])\n\n    function handleEntering() {\n        if (radioGroupRef.current != null) {\n            radioGroupRef.current.focus()\n        }\n    }\n\n    function handleCancel() {\n        onClose()\n    }\n\n    function handleOk() {\n        onClose(value)\n    }\n\n    function handleChange(event, newValue) {\n        setValue(newValue)\n    }\n\n    return (\n        <Dialog\n            maxWidth=\"xs\"\n            disableEscapeKeyDown\n            TransitionProps={{onEntering: handleEntering}}\n            aria-labelledby=\"confirmation-dialog-title\"\n            open={open}\n            {...other}\n        >\n            <DialogTitle id=\"confirmation-dialog-title\">\n                Phone Ringtone\n            </DialogTitle>\n            <DialogContent dividers>\n                <RadioGroup\n                    ref={radioGroupRef}\n                    aria-label=\"Ringtone\"\n                    name=\"ringtone\"\n                    value={value}\n                    onChange={handleChange}\n                >\n                    {options.map((option) => (\n                        <FormControlLabel\n                            value={option}\n                            key={option}\n                            control={<Radio />}\n                            label={option}\n                        />\n                    ))}\n                </RadioGroup>\n            </DialogContent>\n            <DialogActions>\n                <Button\n                    variant=\"outlined\"\n                    color=\"secondary\"\n                    onClick={handleCancel}\n                >\n                    Cancel\n                </Button>\n                <Button onClick={handleOk} color=\"primary\">\n                    Ok\n                </Button>\n            </DialogActions>\n        </Dialog>\n    )\n}\n\nConfirmationDialogRaw.propTypes = {\n    onClose: PropTypes.func.isRequired,\n    open: PropTypes.bool.isRequired,\n    value: PropTypes.string.isRequired,\n}\n\nconst DialogRoot = styled('div')(({ theme }) => ({\n    width: '100%',\n    maxWidth: 360,\n    backgroundColor: theme.palette.background.paper,\n    '& .paper': {\n        width: '80%',\n        maxHeight: 435,\n    }\n}))\n\nexport default function ConfirmationDialog() {\n    const [open, setOpen] = React.useState(false)\n    const [value, setValue] = React.useState('Dione')\n\n    function handleClickListItem() {\n        setOpen(true)\n    }\n\n    function handleClose(newValue) {\n        setOpen(false)\n\n        if (newValue) {\n            setValue(newValue)\n        }\n    }\n\n    return (\n        <DialogRoot>\n            <List component=\"div\" role=\"list\">\n                <ListItem button divider disabled role=\"listitem\">\n                    <ListItemText primary=\"Interruptions\" />\n                </ListItem>\n                <ListItem\n                    button\n                    divider\n                    aria-controls=\"ringtone-menu\"\n                    aria-label=\"Phone ringtone\"\n                    onClick={handleClickListItem}\n                    role=\"listitem\"\n                >\n                    <ListItemText primary=\"Phone ringtone\" secondary={value} />\n                </ListItem>\n                <ListItem button divider disabled role=\"listitem\">\n                    <ListItemText\n                        primary=\"Default notification ringtone\"\n                        secondary=\"Tethys\"\n                    />\n                </ListItem>\n                <ConfirmationDialogRaw\n                    keepMounted\n                    open={open}\n                    value={value}\n                    className=\"paper\"\n                    id=\"ringtone-menu\"\n                    onClose={handleClose}\n                />\n            </List>\n        </DialogRoot>\n    )\n}\n","import React from 'react'\nimport { Breadcrumb, SimpleCard } from 'app/components'\nimport SimpleDialogDemo from './SimpleDialog'\nimport AlertDialog from './SimpleAlerts'\nimport AlertDialogSlide from './DialogTransition'\nimport FormDialog from './FormDialog'\nimport CustomizedDialogs from './CustomizedDialog'\nimport FullScreenDialog from './FullScreenDialog'\nimport MaxWidthDialog from './OptimalSizeDialog'\nimport ResponsiveDialog from './ResponsiveDialog'\nimport ConfirmationDialog from './ConfirmationDialog'\nimport { Box, styled } from '@mui/system'\n\nconst Container = styled('div')(({ theme }) => ({\n    margin: '30px',\n    [theme.breakpoints.down('sm')]: {\n        margin: '16px',\n    },\n    '& .breadcrumb': {\n        marginBottom: '30px',\n        [theme.breakpoints.down('sm')]: {\n            marginBottom: '16px',\n        },\n    },\n}))\n\nconst AppDialog = () => {\n    return (\n        <Container>\n            <div className=\"breadcrumb\">\n                <Breadcrumb\n                    routeSegments={[\n                        { name: 'Material', path: '/material' },\n                        { name: 'Dialog' },\n                    ]}\n                />\n            </div>\n            <SimpleCard title=\"simple Dialog\">\n                <SimpleDialogDemo />\n            </SimpleCard>\n            <Box py=\"12px\" />\n            <SimpleCard title=\"alert dialog\">\n                <AlertDialog />\n            </SimpleCard>\n            <Box py=\"12px\" />\n            <SimpleCard title=\"transition\">\n                <AlertDialogSlide />\n            </SimpleCard>\n            <Box py=\"12px\" />\n            <SimpleCard title=\"form dialog\">\n                <FormDialog />\n            </SimpleCard>\n            <Box py=\"12px\" />\n            <SimpleCard title=\"customized dialog\">\n                <CustomizedDialogs />\n            </SimpleCard>\n            <Box py=\"12px\" />\n            <SimpleCard title=\"full-screen dialog\">\n                <FullScreenDialog />\n            </SimpleCard>\n            <Box py=\"12px\" />\n            <SimpleCard title=\"optimized size dialog\">\n                <MaxWidthDialog />\n            </SimpleCard>\n            <Box py=\"12px\" />\n            <SimpleCard title=\"responsive dialog\">\n                <ResponsiveDialog />\n            </SimpleCard>\n            <Box py=\"12px\" />\n            <SimpleCard title=\"confirmation dialog\">\n                <ConfirmationDialog />\n            </SimpleCard>\n        </Container>\n    )\n}\n\nexport default AppDialog\n"],"sourceRoot":""}