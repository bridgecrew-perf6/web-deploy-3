{"version":3,"sources":["app/components/Footer/Footer.jsx","app/components/ShoppingCart/ShoppingCart.jsx","app/contexts/NotificationContext.js","app/hooks/useNotification.js","app/components/NotificationBar/NotificationBar.jsx","app/components/MatxLayout/Layout1/Layout1Topbar.jsx","app/components/Brand/Brand.jsx","app/components/Sidenav/Sidenav.jsx","app/components/MatxLayout/Layout1/Layout1Sidenav.jsx","app/components/MatxTheme/SidenavTheme/SidenavTheme.jsx","app/components/SecondarySidebar/SecondarySidebarToggle.jsx","app/components/MatxCustomizer/BadgeSelected.jsx","app/components/MatxCustomizer/MatxCustomizer.jsx","app/components/SecondarySidebar/SecondarySidebarContent.jsx","app/components/MatxTheme/SecondarySidenavTheme/SecondarySidenavTheme.jsx","app/components/SecondarySidebar/SecondarySidebar.jsx","app/components/MatxLayout/Layout1/Layout1.jsx"],"names":["AppFooter","styled","Toolbar","display","alignItems","minHeight","topBarHeight","width","padding","flexDirection","margin","FooterContent","maxWidth","Footer","theme","useTheme","settings","useSettings","footerTheme","themes","footer","ThemeProvider","AppBar","color","position","sx","zIndex","href","Button","variant","m","StyledIconButton","IconButton","palette","text","primary","disabled","MiniCart","height","sideNavWidth","CartBox","paddingLeft","boxShadow","themeShadows","marginTop","marginBottom","marginLeft","fontWeight","ProductBox","transition","background","IMG","ProductDetails","marginRight","textAlign","flexGrow","whiteSpace","overflow","textOverflow","cartListLoaded","ShoppingCart","container","useState","totalCost","setTotalCost","panelOpen","setPanelOpen","dispatch","useDispatch","navigate","useNavigate","user","useAuth","cartList","useSelector","state","ecommerce","secondary","getCartList","id","handleDrawerToggle","useEffect","total","forEach","product","price","amount","textColor","onClick","Badge","badgeContent","length","Icon","activeTheme","Drawer","anchor","open","onClose","ModalProps","keepMounted","Box","map","mr","size","updateCartAmount","cursor","src","imgUrl","alt","title","deleteProductFromCart","userId","fontSize","borderRadius","toFixed","reducer","action","type","notifications","payload","NotificationContext","createContext","deleteNotification","clearNotifications","getNotifications","createNotification","NotificationProvider","children","useReducer","notificationID","axios","post","res","data","console","error","get","notification","Provider","value","useNotification","useContext","Notification","NotificationCard","opacity","DeleteButton","right","CardLeftContent","justifyContent","Heading","NotificationBar","React","className","to","path","style","textDecoration","Card","mx","mb","elevation","icon","name","heading","getTimeDifference","Date","timestamp","px","pt","pb","subtitle","TopbarRoot","top","TopbarContainer","paddingRight","main","breakpoints","down","UserMenu","StyledItem","MenuItem","minWidth","IconBox","Layout1Topbar","updateSettings","logout","isMdScreen","useMediaQuery","mode","sidebarSettings","layout1Settings","leftSidebar","menuButton","Hidden","xsDown","Avatar","avatar","memo","BrandRoot","StyledSpan","Span","Brand","StyledScrollBar","Scrollbar","SideNavMobile","left","bottom","up","Sidenav","options","suppressScrollX","items","navigations","activeLayoutSettingsName","activeLayout","activeLayoutSettings","updateSidebarMode","SidebarNavRoot","primaryBg","bgImgURL","backgroundRepeat","backgroundPosition","backgroundSize","backgroundImage","NavListBox","Layout1Sidenav","primaryRGB","convertHexToRGB","sidenavCompactWidth","smDown","Switch","onChange","checked","SidenavTheme","sidenavTheme","Toggle","SecondarySidebarToggle","toggle","secondarySidebar","contrastText","clsx","Fab","BadgeSelected","Label","backgroundColor","dark","transform","letterSpacing","MaxCustomaizer","paddingBottom","default","LayoutBox","Controller","demoLayouts","thumbnail","isPro","bgOpacity","topbar","fixed","MatxCustomizer","setOpen","tabIndex","setTabIndex","tooglePanel","handleTabChange","index","Tooltip","placement","ml","layout","invisible","Link","target","SidebarRoot","shadows","props","SecondarySidebarContent","my","SecondarySidenavTheme","classes","SecondarySidebar","secondarySidebarTheme","Layout1Root","ContentBox","overflowY","overflowX","LayoutContainer","verticalAlign","Layout1","topbarTheme","sidenavMode","showSidenav","show","sidenavWidth","getSidenavWidth","ref","useRef","layoutClasses","current","sidebarMode","perfectScrollbar"],"mappings":"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","file":"static/js/27.a3a15037.chunk.js","sourcesContent":["import React from 'react'\nimport { Span, Paragraph } from '../Typography'\nimport useSettings from 'app/hooks/useSettings'\nimport { Button, Toolbar, AppBar, ThemeProvider } from '@mui/material'\nimport { styled, useTheme } from '@mui/system'\nimport { topBarHeight } from 'app/utils/constant'\n\nconst AppFooter = styled(Toolbar)(() => ({\n    display: 'flex',\n    alignItems: 'center',\n    minHeight: topBarHeight,\n    '@media (max-width: 499px)': {\n        display: 'table',\n        width: '100%',\n        minHeight: 'auto',\n        padding: '1rem 0',\n        '& .container': {\n            flexDirection: 'column !important',\n            '& a': {\n                margin: '0 0 16px !important',\n            },\n        },\n    },\n}))\n\nconst FooterContent = styled('div')(() => ({\n    width: '100%',\n    display: 'flex',\n    alignItems: 'center',\n    padding: '0px 1rem',\n    maxWidth: '1170px',\n    margin: '0 auto',\n}))\n\nconst Footer = () => {\n    const theme = useTheme()\n    const { settings } = useSettings()\n\n    const footerTheme = settings.themes[settings.footer.theme] || theme\n\n    return (\n        <ThemeProvider theme={footerTheme}>\n            <AppBar\n                color=\"primary\"\n                position=\"static\"\n                sx={{ zIndex: 96 }}\n            >\n                <AppFooter>\n                    <FooterContent>\n                        <a href=\"https://ui-lib.com/downloads/matx-pro-react-admin/\">\n                            <Button variant=\"contained\" color=\"secondary\">\n                                Get MatX Pro\n                            </Button>\n                        </a>\n                        <Span sx={{ m: \"auto\" }}></Span>\n                        <Paragraph sx={{ m: 0 }}>\n                            Design and Developed by{' '}\n                            <a href=\"http://ui-lib.com\">UI Lib</a>\n                        </Paragraph>\n                    </FooterContent>\n                </AppFooter>\n            </AppBar>\n        </ThemeProvider>\n    )\n}\n\nexport default Footer\n","import { useEffect } from 'react'\nimport useAuth from 'app/hooks/useAuth'\nimport { H6, Small } from '../Typography'\nimport { Box, styled, useTheme } from '@mui/system'\nimport { useNavigate } from 'react-router-dom'\nimport useSettings from 'app/hooks/useSettings'\nimport React, { Fragment, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { themeShadows } from '../MatxTheme/themeColors'\nimport { sideNavWidth, topBarHeight } from 'app/utils/constant'\nimport {\n    getCartList,\n    deleteProductFromCart,\n    updateCartAmount,\n} from 'app/redux/actions/EcommerceActions'\nimport {\n    Icon,\n    Badge,\n    IconButton,\n    Drawer,\n    Button,\n    ThemeProvider,\n} from '@mui/material'\n\nconst StyledIconButton = styled(IconButton)(({ theme }) => ({\n    '& span': {\n        color: theme.palette.text.primary,\n    },\n    '& #disable': {\n        color: theme.palette.text.disabled,\n    },\n}))\n\nconst MiniCart = styled('div')(({ theme }) => ({\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n    width: sideNavWidth,\n}))\n\nconst CartBox = styled('div')(() => ({\n    padding: '4px',\n    paddingLeft: '16px',\n    display: 'flex',\n    alignItems: 'center',\n    boxShadow: themeShadows[6],\n    height: topBarHeight,\n    '& h5': {\n        marginTop: 0,\n        marginBottom: 0,\n        marginLeft: '16px',\n        fontWeight: '500',\n    },\n}))\n\nconst ProductBox = styled('div')(() => ({\n    display: 'flex',\n    alignItems: 'center',\n    padding: '8px 8px',\n    transition: 'background 300ms ease',\n    '&:hover': {\n        background: 'rgba(0,0,0,0.01)',\n    },\n}))\n\nconst IMG = styled('img')(() => ({\n    width: 48,\n}))\n\nconst ProductDetails = styled('div')(() => ({\n    marginRight: '8',\n    textAlign: 'center',\n    flexGrow: 1,\n    display: 'flex',\n    flexDirection: 'column',\n    '& h6': {\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        display: 'block',\n        width: 120,\n        marginBottom: '4px',\n    },\n}))\n\nlet cartListLoaded = false\n\nfunction ShoppingCart({ container }) {\n    const [totalCost, setTotalCost] = useState(0)\n    const [panelOpen, setPanelOpen] = useState(false)\n    const dispatch = useDispatch()\n    const navigate = useNavigate()\n    const { user } = useAuth()\n    const { cartList } = useSelector((state) => state.ecommerce)\n    const { settings } = useSettings()\n    const theme = useTheme()\n    const secondary = theme.palette.text.secondary\n\n    if (!cartListLoaded) {\n        dispatch(getCartList(user.id))\n        cartListLoaded = true\n    }\n\n    const handleDrawerToggle = () => {\n        setPanelOpen(!panelOpen)\n    }\n\n    const handleCheckoutClick = () => {\n        if (totalCost > 0) {\n            navigate('/ecommerce/checkout')\n            setPanelOpen(false)\n        }\n    }\n\n    useEffect(() => {\n        let total = 0\n\n        cartList.forEach((product) => {\n            total += product.price * product.amount\n        })\n        setTotalCost(total)\n    }, [cartList])\n\n    const { palette } = useTheme()\n    const textColor = palette.text.primary\n\n    return (\n        <Fragment>\n            <IconButton onClick={handleDrawerToggle}>\n                <Badge color=\"secondary\" badgeContent={cartList.length}>\n                    <Icon sx={{ color: textColor }}>shopping_cart</Icon>\n                </Badge>\n            </IconButton>\n\n            <ThemeProvider theme={settings.themes[settings.activeTheme]}>\n                <Drawer\n                    container={container}\n                    variant=\"temporary\"\n                    anchor={'right'}\n                    open={panelOpen}\n                    onClose={handleDrawerToggle}\n                    ModalProps={{\n                        keepMounted: true,\n                    }}\n                >\n                    <MiniCart>\n                        <CartBox>\n                            <Icon color=\"primary\">shopping_cart</Icon>\n                            <h5>Cart</h5>\n                        </CartBox>\n\n                        <Box flexGrow={1} overflow=\"auto\">\n                            {cartList.map((product) => (\n                                <ProductBox key={product.id}>\n                                    <Box\n                                        mr=\"4px\"\n                                        display=\"flex\"\n                                        flexDirection=\"column\"\n                                    >\n                                        <StyledIconButton\n                                            size=\"small\"\n                                            onClick={() =>\n                                                dispatch(\n                                                    updateCartAmount(\n                                                        user.id,\n                                                        product.id,\n                                                        product.amount + 1\n                                                    )\n                                                )\n                                            }\n                                        >\n                                            <Icon sx={{ cursor: 'pinter' }}>\n                                                keyboard_arrow_up\n                                            </Icon>\n                                        </StyledIconButton>\n                                        <StyledIconButton\n                                            disabled={!(product.amount - 1)}\n                                            size=\"small\"\n                                            onClick={() =>\n                                                dispatch(\n                                                    updateCartAmount(\n                                                        user.id,\n                                                        product.id,\n                                                        product.amount - 1\n                                                    )\n                                                )\n                                            }\n                                        >\n                                            <Icon id={!(product.amount - 1) && 'disable'}>\n                                                keyboard_arrow_down\n                                            </Icon>\n                                        </StyledIconButton>\n                                    </Box>\n                                    <Box mr={1}>\n                                        <IMG\n                                            src={product.imgUrl}\n                                            alt={product.title}\n                                        />\n                                    </Box>\n                                    <ProductDetails>\n                                        <H6>{product.title}</H6>\n                                        <Small sx={{ color: secondary }}>\n                                            ${product.price} x {product.amount}\n                                        </Small>\n                                    </ProductDetails>\n                                    <StyledIconButton\n                                        size=\"small\"\n                                        onClick={() =>\n                                            dispatch(\n                                                deleteProductFromCart(\n                                                    user.userId,\n                                                    product.id\n                                                )\n                                            )\n                                        }\n                                    >\n                                        <Icon fontSize=\"small\">clear</Icon>\n                                    </StyledIconButton>\n                                </ProductBox>\n                            ))}\n                        </Box>\n\n                        <Button\n                            sx={{ width: '100%', borderRadius: 0 }}\n                            variant=\"contained\"\n                            color=\"primary\"\n                            onClick={handleCheckoutClick}\n                        >\n                            Checkout (${totalCost.toFixed(2)})\n                        </Button>\n                    </MiniCart>\n                </Drawer>\n            </ThemeProvider>\n        </Fragment>\n    )\n}\n\nexport default ShoppingCart\n","import React, { createContext, useEffect, useReducer } from 'react'\nimport axios from 'axios'\n\nconst reducer = (state, action) => {\n    switch (action.type) {\n        case 'LOAD_NOTIFICATIONS': {\n            return {\n                ...state,\n                notifications: action.payload,\n            }\n        }\n        case 'DELETE_NOTIFICATION': {\n            return {\n                ...state,\n                notifications: action.payload,\n            }\n        }\n        case 'CLEAR_NOTIFICATIONS': {\n            return {\n                ...state,\n                notifications: action.payload,\n            }\n        }\n        default: {\n            return { ...state }\n        }\n    }\n}\n\nconst NotificationContext = createContext({\n    notifications: [],\n    deleteNotification: () => {},\n    clearNotifications: () => {},\n    getNotifications: () => {},\n    createNotification: () => {},\n})\n\nexport const NotificationProvider = ({ settings, children }) => {\n    const [state, dispatch] = useReducer(reducer, [])\n\n    const deleteNotification = async (notificationID) => {\n        try {\n            const res = await axios.post('/api/notification/delete', {\n                id: notificationID,\n            })\n            dispatch({\n                type: 'DELETE_NOTIFICATION',\n                payload: res.data,\n            })\n        } catch (e) {\n            console.error(e)\n        }\n    }\n\n    const clearNotifications = async () => {\n        try {\n            const res = await axios.post('/api/notification/delete-all')\n            dispatch({\n                type: 'CLEAR_NOTIFICATIONS',\n                payload: res.data,\n            })\n        } catch (e) {\n            console.error(e)\n        }\n    }\n\n    const getNotifications = async () => {\n        try {\n            const res = await axios.get('/api/notification')\n            dispatch({\n                type: 'LOAD_NOTIFICATIONS',\n                payload: res.data,\n            })\n        } catch (e) {\n            console.error(e)\n        }\n    }\n    const createNotification = async (notification) => {\n        try {\n            const res = await axios.post('/api/notification/add', {\n                notification,\n            })\n            dispatch({\n                type: 'CREATE_NOTIFICATION',\n                payload: res.data,\n            })\n        } catch (e) {\n            console.error(e)\n        }\n    }\n\n    useEffect(() => {\n        getNotifications()\n    }, [])\n\n    return (\n        <NotificationContext.Provider\n            value={{\n                notifications: state.notifications,\n                deleteNotification,\n                clearNotifications,\n                getNotifications,\n                createNotification,\n            }}\n        >\n            {children}\n        </NotificationContext.Provider>\n    )\n}\n\nexport default NotificationContext\n","import { useContext } from 'react'\nimport NotificationContext from 'app/contexts/NotificationContext'\n\nconst useNotification = () => useContext(NotificationContext)\n\nexport default useNotification\n","import React, { Fragment } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Small, Paragraph } from '../Typography'\r\nimport { themeShadows } from '../MatxTheme/themeColors'\r\nimport { getTimeDifference } from 'app/utils/utils.js'\r\nimport useSettings from 'app/hooks/useSettings'\r\nimport useNotification from 'app/hooks/useNotification'\r\nimport { styled, Box, useTheme } from '@mui/system'\r\nimport {\r\n    Icon,\r\n    Badge,\r\n    Card,\r\n    Button,\r\n    IconButton,\r\n    Drawer,\r\n    ThemeProvider,\r\n} from '@mui/material'\r\nimport { sideNavWidth, topBarHeight } from 'app/utils/constant'\r\n\r\nconst Notification = styled('div')(() => ({\r\n    padding: '16px',\r\n    marginBottom: '16px',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    height: topBarHeight,\r\n    boxShadow: themeShadows[6],\r\n    '& h5': {\r\n        marginLeft: '8px',\r\n        marginTop: 0,\r\n        marginBottom: 0,\r\n        fontWeight: '500',\r\n    },\r\n}))\r\n\r\nconst NotificationCard = styled(Box)(({ theme }) => ({\r\n    position: 'relative',\r\n    '&:hover': {\r\n        '& .messageTime': {\r\n            display: 'none',\r\n        },\r\n        '& .deleteButton': {\r\n            opacity: '1',\r\n        },\r\n    },\r\n    '& .messageTime': {\r\n        color: theme.palette.text.secondary,\r\n    },\r\n    '& .icon': { fontSize: '1.25rem' },\r\n}))\r\n\r\nconst DeleteButton = styled(IconButton)(({ theme }) => ({\r\n    opacity: '0',\r\n    position: 'absolute',\r\n    right: 5,\r\n    marginTop: 9,\r\n    marginRight: '24px',\r\n    background: 'rgba(0, 0, 0, 0.01)',\r\n}))\r\n\r\nconst CardLeftContent = styled('div')(({ theme }) => ({\r\n    padding: '12px 8px',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'space-between',\r\n    background: 'rgba(0, 0, 0, 0.01)',\r\n    '& small': {\r\n        fontWeight: '500',\r\n        marginLeft: '16px',\r\n        color: theme.palette.text.secondary,\r\n    },\r\n}))\r\n\r\nconst Heading = styled('span')(({ theme }) => ({\r\n    fontWeight: '500',\r\n    marginLeft: '16px',\r\n    color: theme.palette.text.secondary,\r\n}))\r\n\r\nconst NotificationBar = ({ container }) => {\r\n    const { settings } = useSettings()\r\n    const theme = useTheme()\r\n    const secondary = theme.palette.text.secondary\r\n    const [panelOpen, setPanelOpen] = React.useState(false)\r\n    const { deleteNotification, clearNotifications, notifications } =\r\n        useNotification()\r\n\r\n    const handleDrawerToggle = () => {\r\n        setPanelOpen(!panelOpen)\r\n    }\r\n\r\n    const { palette } = useTheme()\r\n    const textColor = palette.text.primary\r\n\r\n    return (\r\n        <Fragment>\r\n            <IconButton onClick={handleDrawerToggle}>\r\n                <Badge color=\"secondary\" badgeContent={notifications?.length}>\r\n                    <Icon sx={{ color: textColor }}>notifications</Icon>\r\n                </Badge>\r\n            </IconButton>\r\n\r\n            <ThemeProvider theme={settings.themes[settings.activeTheme]}>\r\n                <Drawer\r\n                    width={'100px'}\r\n                    container={container}\r\n                    variant=\"temporary\"\r\n                    anchor={'right'}\r\n                    open={panelOpen}\r\n                    onClose={handleDrawerToggle}\r\n                    ModalProps={{\r\n                        keepMounted: true,\r\n                    }}\r\n                >\r\n                    <Box sx={{ width: sideNavWidth }}>\r\n                        <Notification>\r\n                            <Icon color=\"primary\">notifications</Icon>\r\n                            <h5>Notifications</h5>\r\n                        </Notification>\r\n\r\n                        {notifications?.map((notification) => (\r\n                            <NotificationCard key={notification.id}>\r\n                                <DeleteButton\r\n                                    size=\"small\"\r\n                                    className=\"deleteButton\"\r\n                                    onClick={() =>\r\n                                        deleteNotification(notification.id)\r\n                                    }\r\n                                >\r\n                                    <Icon className=\"icon\">clear</Icon>\r\n                                </DeleteButton>\r\n                                <Link\r\n                                    to={`/${notification.path}`}\r\n                                    onClick={handleDrawerToggle}\r\n                                    style={{ textDecoration: 'none' }}\r\n                                >\r\n                                    <Card sx={{ mx: 2, mb: 3 }} elevation={3}>\r\n                                        <CardLeftContent>\r\n                                            <Box display=\"flex\">\r\n                                                <Icon\r\n                                                    className=\"icon\"\r\n                                                    color={\r\n                                                        notification.icon.color\r\n                                                    }\r\n                                                >\r\n                                                    {notification.icon.name}\r\n                                                </Icon>\r\n                                                <Heading>\r\n                                                    {notification.heading}\r\n                                                </Heading>\r\n                                            </Box>\r\n                                            <Small className=\"messageTime\">\r\n                                                {getTimeDifference(\r\n                                                    new Date(\r\n                                                        notification.timestamp\r\n                                                    )\r\n                                                )}\r\n                                                ago\r\n                                            </Small>\r\n                                        </CardLeftContent>\r\n                                        <Box sx={{ px: 2, pt: 1, pb: 2 }}>\r\n                                            <Paragraph sx={{ m: 0 }}>\r\n                                                {notification.title}\r\n                                            </Paragraph>\r\n                                            <Small sx={{ color: secondary }}>\r\n                                                {notification.subtitle}\r\n                                            </Small>\r\n                                        </Box>\r\n                                    </Card>\r\n                                </Link>\r\n                            </NotificationCard>\r\n                        ))}\r\n                        {!!notifications?.length && (\r\n                            <Box sx={{ color: secondary }}>\r\n                                <Button onClick={clearNotifications}>\r\n                                    Clear Notifications\r\n                                </Button>\r\n                            </Box>\r\n                        )}\r\n                    </Box>\r\n                </Drawer>\r\n            </ThemeProvider>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default NotificationBar\r\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport useAuth from 'app/hooks/useAuth'\nimport useSettings from 'app/hooks/useSettings'\nimport { styled, useTheme, Box } from '@mui/system'\nimport { Span } from '../../../components/Typography'\nimport { MatxMenu, MatxSearchBox } from 'app/components'\nimport ShoppingCart from '../../ShoppingCart/ShoppingCart'\nimport NotificationBar from '../../NotificationBar/NotificationBar'\nimport { themeShadows } from 'app/components/MatxTheme/themeColors'\nimport { NotificationProvider } from 'app/contexts/NotificationContext'\nimport {\n    Icon,\n    IconButton,\n    MenuItem,\n    Avatar,\n    useMediaQuery,\n    Hidden,\n} from '@mui/material'\nimport { topBarHeight } from 'app/utils/constant'\n\nconst StyledIconButton = styled(IconButton)(({ theme }) => ({\n    color: theme.palette.text.primary,\n}))\n\nconst TopbarRoot = styled('div')(({ theme }) => ({\n    top: 0,\n    zIndex: 96,\n    transition: 'all 0.3s ease',\n    boxShadow: themeShadows[8],\n    height: topBarHeight,\n}))\n\nconst TopbarContainer = styled(Box)(({ theme }) => ({\n    padding: '8px',\n    paddingLeft: 18,\n    paddingRight: 20,\n    height: '100%',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    background: theme.palette.primary.main,\n    [theme.breakpoints.down('sm')]: {\n        paddingLeft: 16,\n        paddingRight: 16,\n    },\n    [theme.breakpoints.down('xs')]: {\n        paddingLeft: 14,\n        paddingRight: 16,\n    },\n}))\n\nconst UserMenu = styled(Box)(() => ({\n    display: 'flex',\n    alignItems: 'center',\n    cursor: 'pointer',\n    borderRadius: 24,\n    padding: 4,\n    '& span': {\n        margin: '0 8px',\n    },\n}))\n\nconst StyledItem = styled(MenuItem)(({ theme }) => ({\n    display: 'flex',\n    alignItems: 'center',\n    minWidth: 185,\n    '& a': {\n        width: '100%',\n        display: 'flex',\n        alignItems: 'center',\n        textDecoration: 'none',\n    },\n    '& span': {\n        marginRight: '10px',\n        color: theme.palette.text.primary,\n    },\n}))\n\nconst IconBox = styled('div')(({ theme }) => ({\n    display: 'inherit',\n    [theme.breakpoints.down('md')]: {\n        display: 'none !important',\n    },\n}))\n\nconst Layout1Topbar = () => {\n    const theme = useTheme()\n    const { settings, updateSettings } = useSettings()\n    const { logout, user } = useAuth()\n    const isMdScreen = useMediaQuery(theme.breakpoints.down('md'))\n\n    const updateSidebarMode = (sidebarSettings) => {\n        updateSettings({\n            layout1Settings: {\n                leftSidebar: {\n                    ...sidebarSettings,\n                },\n            },\n        })\n    }\n\n    const handleSidebarToggle = () => {\n        let { layout1Settings } = settings\n        let mode\n        if (isMdScreen) {\n            mode =\n                layout1Settings.leftSidebar.mode === 'close'\n                    ? 'mobile'\n                    : 'close'\n        } else {\n            mode =\n                layout1Settings.leftSidebar.mode === 'full' ? 'close' : 'full'\n        }\n        updateSidebarMode({ mode })\n    }\n\n    return (\n        <TopbarRoot>\n            <TopbarContainer>\n                <Box display=\"flex\">\n                    <StyledIconButton onClick={handleSidebarToggle}>\n                        <Icon>menu</Icon>\n                    </StyledIconButton>\n\n                    <IconBox>\n                        <StyledIconButton>\n                            <Icon>mail_outline</Icon>\n                        </StyledIconButton>\n\n                        <StyledIconButton>\n                            <Icon>web_asset</Icon>\n                        </StyledIconButton>\n\n                        <StyledIconButton>\n                            <Icon>star_outline</Icon>\n                        </StyledIconButton>\n                    </IconBox>\n                </Box>\n                <Box display=\"flex\" alignItems=\"center\">\n                    <MatxSearchBox />\n                    <NotificationProvider>\n                        <NotificationBar />\n                    </NotificationProvider>\n\n                    <ShoppingCart />\n\n                    <MatxMenu\n                        menuButton={\n                            <UserMenu>\n                                <Hidden xsDown>\n                                    <Span>\n                                        Hi <strong>{user.name}</strong>\n                                    </Span>\n                                </Hidden>\n                                <Avatar\n                                    src={user.avatar}\n                                    sx={{ cursor: 'pointer' }}\n                                />\n                            </UserMenu>\n                        }\n                    >\n                        <StyledItem>\n                            <Link to=\"/\">\n                                <Icon> home </Icon>\n                                <Span> Home </Span>\n                            </Link>\n                        </StyledItem>\n                        <StyledItem>\n                            <Link to=\"/page-layouts/user-profile\">\n                                <Icon> person </Icon>\n                                <Span> Profile </Span>\n                            </Link>\n                        </StyledItem>\n                        <StyledItem>\n                            <Icon> settings </Icon>\n                            <Span> Settings </Span>\n                        </StyledItem>\n                        <StyledItem onClick={logout}>\n                            <Icon> power_settings_new </Icon>\n                            <Span> Logout </Span>\n                        </StyledItem>\n                    </MatxMenu>\n                </Box>\n            </TopbarContainer>\n        </TopbarRoot>\n    )\n}\n\nexport default React.memo(Layout1Topbar)\n","import React from 'react'\nimport { MatxLogo } from 'app/components'\nimport { Span } from '../../components/Typography'\nimport { styled, Box } from '@mui/system'\nimport useSettings from 'app/hooks/useSettings'\n\nconst BrandRoot = styled(Box)(({ theme }) => ({\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    padding: '20px 18px 20px 29px',\n}))\n\nconst StyledSpan = styled(Span)(({ theme, mode }) => ({\n    fontSize: 18,\n    marginLeft: '.5rem',\n    display: mode === 'compact' ? 'none' : 'block',\n}))\n\nconst Brand = ({ children }) => {\n    const { settings } = useSettings()\n    const leftSidebar = settings.layout1Settings.leftSidebar\n    const { mode } = leftSidebar\n\n    return (\n        <BrandRoot>\n            <Box display=\"flex\" alignItems=\"center\">\n                <MatxLogo />\n                <StyledSpan mode={mode} className=\"sidenavHoverShow\">\n                    Matx\n                </StyledSpan>\n            </Box>\n            <Box\n                className=\"sidenavHoverShow\"\n                sx={{ display: mode === 'compact' ? 'none' : 'block' }}\n            >\n                {children || null}\n            </Box>\n        </BrandRoot>\n    )\n}\n\nexport default Brand\n","import React, { Fragment } from 'react'\nimport Scrollbar from 'react-perfect-scrollbar'\nimport { navigations } from 'app/navigations'\nimport { MatxVerticalNav } from 'app/components'\nimport useSettings from 'app/hooks/useSettings'\nimport { styled } from '@mui/system'\n\nconst StyledScrollBar = styled(Scrollbar)(() => ({\n    paddingLeft: '1rem',\n    paddingRight: '1rem',\n    position: 'relative',\n}))\n\nconst SideNavMobile = styled('div')(({ theme }) => ({\n    position: 'fixed',\n    top: 0,\n    left: 0,\n    bottom: 0,\n    right: 0,\n    width: '100vw',\n    background: 'rgba(0, 0, 0, 0.54)',\n    zIndex: -1,\n    [theme.breakpoints.up('lg')]: {\n        display: 'none',\n    },\n}))\n\nconst Sidenav = ({ children }) => {\n    const { settings, updateSettings } = useSettings()\n\n    const updateSidebarMode = (sidebarSettings) => {\n        let activeLayoutSettingsName = settings.activeLayout + 'Settings'\n        let activeLayoutSettings = settings[activeLayoutSettingsName]\n\n        updateSettings({\n            ...settings,\n            [activeLayoutSettingsName]: {\n                ...activeLayoutSettings,\n                leftSidebar: {\n                    ...activeLayoutSettings.leftSidebar,\n                    ...sidebarSettings,\n                },\n            },\n        })\n    }\n\n    return (\n        <Fragment>\n            <StyledScrollBar options={{ suppressScrollX: true }}>\n                {children}\n                <MatxVerticalNav items={navigations} />\n            </StyledScrollBar>\n\n            <SideNavMobile\n                onClick={() => updateSidebarMode({ mode: 'close' })}\n            />\n        </Fragment>\n    )\n}\n\nexport default Sidenav\n","import React from 'react'\r\nimport Brand from '../../Brand/Brand'\r\nimport { convertHexToRGB } from 'app/utils/utils'\r\nimport { Box, styled, useTheme } from '@mui/system'\r\nimport Sidenav from '../../Sidenav/Sidenav'\r\nimport useSettings from 'app/hooks/useSettings'\r\nimport { Switch, Hidden } from '@mui/material'\r\nimport { themeShadows } from 'app/components/MatxTheme/themeColors'\r\nimport { sidenavCompactWidth, sideNavWidth } from 'app/utils/constant'\r\n\r\nconst SidebarNavRoot = styled(Box)(({ theme, width, primaryBg, bgImgURL }) => ({\r\n    position: 'fixed',\r\n    top: 0,\r\n    left: 0,\r\n    height: '100vh',\r\n    width: width,\r\n    boxShadow: themeShadows[8],\r\n    backgroundRepeat: 'no-repeat',\r\n    backgroundPosition: 'top',\r\n    backgroundSize: 'cover',\r\n    zIndex: 111,\r\n    overflow: 'hidden',\r\n    color: theme.palette.text.primary,\r\n    transition: 'all 250ms ease-in-out',\r\n    backgroundImage: `linear-gradient(to bottom, rgba(${primaryBg}, 0.96), rgba(${primaryBg}, 0.96)), url(${bgImgURL})`,\r\n    '&:hover': {\r\n        width: sideNavWidth,\r\n        '& .sidenavHoverShow': {\r\n            display: 'block',\r\n        },\r\n        '& .compactNavItem': {\r\n            width: '100%',\r\n            maxWidth: '100%',\r\n            '& .nav-bullet': {\r\n                display: 'block',\r\n            },\r\n            '& .nav-bullet-text': {\r\n                display: 'none',\r\n            },\r\n        },\r\n    },\r\n}))\r\n\r\nconst NavListBox = styled(Box)(() => ({\r\n    height: '100%',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n}))\r\n\r\nconst Layout1Sidenav = () => {\r\n    const theme = useTheme()\r\n    const { settings, updateSettings } = useSettings()\r\n    const leftSidebar = settings.layout1Settings.leftSidebar\r\n    const { mode, bgImgURL } = leftSidebar\r\n\r\n    const getSidenavWidth = () => {\r\n        switch (mode) {\r\n            case 'compact':\r\n                return sidenavCompactWidth\r\n            default:\r\n                return sideNavWidth\r\n        }\r\n    }\r\n    const primaryRGB = convertHexToRGB(theme.palette.primary.main)\r\n\r\n    const updateSidebarMode = (sidebarSettings) => {\r\n        updateSettings({\r\n            layout1Settings: {\r\n                leftSidebar: {\r\n                    ...sidebarSettings,\r\n                },\r\n            },\r\n        })\r\n    }\r\n\r\n    const handleSidenavToggle = () => {\r\n        updateSidebarMode({ mode: mode === 'compact' ? 'full' : 'compact' })\r\n    }\r\n\r\n    return (\r\n        <SidebarNavRoot\r\n            bgImgURL={bgImgURL}\r\n            primaryBg={primaryRGB}\r\n            width={getSidenavWidth()}\r\n        >\r\n            <NavListBox>\r\n                <Brand>\r\n                    <Hidden smDown>\r\n                        <Switch\r\n                            onChange={handleSidenavToggle}\r\n                            checked={leftSidebar.mode !== 'full'}\r\n                            color=\"secondary\"\r\n                            size=\"small\"\r\n                        />\r\n                    </Hidden>\r\n                </Brand>\r\n                <Sidenav />\r\n            </NavListBox>\r\n        </SidebarNavRoot>\r\n    )\r\n}\r\n\r\nexport default React.memo(Layout1Sidenav)\r\n","import React from 'react'\nimport useSettings from 'app/hooks/useSettings'\nimport { ThemeProvider, useTheme } from '@mui/material'\n\nconst SidenavTheme = ({ children }) => {\n    const theme = useTheme()\n    const { settings } = useSettings()\n    const sidenavTheme =\n        settings.themes[settings.layout1Settings.leftSidebar.theme] || theme\n\n    return <ThemeProvider theme={sidenavTheme}>{children}</ThemeProvider>\n}\n\nexport default SidenavTheme\n","import clsx from 'clsx'\nimport React from 'react'\nimport { styled, useTheme } from '@mui/system'\nimport useSettings from 'app/hooks/useSettings'\nimport { Fab, IconButton, Icon } from '@mui/material'\n\nconst Toggle = styled('div')(() => ({\n    position: 'fixed',\n    right: '30px',\n    bottom: '50px',\n    zIndex: 99,\n    transition: 'all 0.15s ease',\n    '&.open': {\n        right: '10px',\n    },\n}))\n\nconst SecondarySidebarToggle = () => {\n    const { settings, updateSettings } = useSettings()\n\n    const toggle = () => {\n        updateSettings({\n            secondarySidebar: { open: !settings.secondarySidebar.open },\n        })\n    }\n\n    // useEffect(() => {\n    //   updateSettings({\n    //     secondarySidebar: { open: !isMobile },\n    //   });\n    // }, [isMobile]);\n\n    const { palette } = useTheme()\n    const textColor = palette.primary.contrastText\n\n    return (\n        <Toggle className={clsx({ open: settings.secondarySidebar.open })}>\n            {settings.secondarySidebar.open && (\n                <IconButton onClick={toggle} size=\"small\" aria-label=\"toggle\">\n                    <Icon sx={{ color: textColor }}>close</Icon>\n                </IconButton>\n            )}\n            {!settings.secondarySidebar.open && (\n                <Fab color=\"primary\" aria-label=\"expand\" onClick={toggle}>\n                    <Icon sx={{ color: textColor }}>settings</Icon>\n                </Fab>\n            )}\n        </Toggle>\n    )\n}\n\nexport default SecondarySidebarToggle\n","import { Badge } from '@mui/material'\nimport { styled } from '@mui/system'\n\nconst BadgeSelected = styled(Badge)(() => ({\n    top: '0',\n    right: '0',\n    height: '32px',\n    width: '32px',\n    borderRadius: '50%',\n}))\n\nexport default BadgeSelected\n","import { H5, Span } from '../Typography'\nimport BadgeSelected from './BadgeSelected'\nimport Scrollbar from 'react-perfect-scrollbar'\nimport useSettings from 'app/hooks/useSettings'\nimport React, { Fragment, useState } from 'react'\nimport { styled, Box, useTheme } from '@mui/system'\nimport { themeShadows } from '../MatxTheme/themeColors'\nimport {\n    Icon,\n    Card,\n    Link,\n    Button,\n    Drawer,\n    Tooltip,\n    IconButton,\n    ThemeProvider,\n} from '@mui/material'\n\nconst Label = styled(Span)(({ theme }) => ({\n    color: theme.palette.secondary.main,\n    backgroundColor: theme.palette.primary.dark,\n    fontWeight: 700,\n    transform: 'rotate(90deg)',\n    marginBottom: '2.5rem',\n    padding: '.25rem .5rem',\n    borderRadius: '4px',\n    cursor: 'pointer',\n    letterSpacing: '1.5px',\n    fontSize: '1rem',\n    '&:hover, &.open': {\n        backgroundColor: theme.palette.secondary.main,\n        color: theme.palette.secondary.contrastText,\n    },\n}))\n\nconst MaxCustomaizer = styled('div')(({ theme }) => ({\n    height: '100vh',\n    width: 320,\n    position: 'fixed',\n    top: 0,\n    right: 0,\n    zIndex: 50,\n    display: 'flex',\n    flexDirection: 'column',\n    paddingBottom: '32px',\n    boxShadow: themeShadows[12],\n    background: theme.palette.background.default,\n    '& .helpText': {\n        margin: '0px .5rem 1rem',\n    },\n}))\n\nconst LayoutBox = styled(BadgeSelected)(() => ({\n    width: '100%',\n    height: '152px !important',\n    cursor: 'pointer',\n    marginTop: '12px',\n    marginBottom: '12px',\n    '& .layout-name': {\n        display: 'none',\n    },\n    '&:hover .layout-name': {\n        position: 'absolute',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        height: '100%',\n        width: '100%',\n        background: 'rgba(0,0,0,0.3)',\n        zIndex: 12,\n    },\n}))\n\nconst Controller = styled('div')(() => ({\n    minHeight: 58,\n    padding: '14px 20px',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    marginBottom: '16px',\n    boxShadow: themeShadows[6],\n}))\n\nconst IMG = styled('img')(() => ({\n    width: '100%',\n}))\n\nconst StyledScrollBar = styled(Scrollbar)(() => ({\n    paddingLeft: '16px',\n    paddingRight: '16px',\n}))\n\nconst MatxCustomizer = () => {\n    const [open, setOpen] = useState(false)\n    const [tabIndex, setTabIndex] = useState(0)\n    const { settings, updateSettings } = useSettings()\n    const theme = useTheme()\n    const secondary = theme.palette.text.secondary\n\n    const tooglePanel = () => {\n        setOpen(!open)\n    }\n    const handleTabChange = (index) => {\n        setTabIndex(index)\n    }\n    let activeTheme = { ...settings.themes[settings.activeTheme] }\n\n    return (\n        <Fragment>\n            <Tooltip title=\"Theme Settings\" placement=\"left\">\n                <Label className=\"open\" onClick={tooglePanel}>\n                    DEMOS\n                </Label>\n            </Tooltip>\n\n            <ThemeProvider theme={activeTheme}>\n                <Drawer\n                    anchor={'right'}\n                    open={open}\n                    variant=\"temporary\"\n                    onClose={tooglePanel}\n                    ModalProps={{\n                        keepMounted: true,\n                    }}\n                >\n                    <MaxCustomaizer>\n                        <Controller>\n                            <Box display=\"flex\">\n                                <Icon className=\"icon\" color=\"primary\">\n                                    settings\n                                </Icon>\n                                <H5 sx={{ ml: 1, fontSize: '1rem' }}>\n                                    Theme Settings\n                                </H5>\n                            </Box>\n                            <IconButton onClick={tooglePanel}>\n                                <Icon className=\"icon\">close</Icon>\n                            </IconButton>\n                        </Controller>\n                        <Box px={3} mb={2} display=\"flex\">\n                            <Button\n                                variant=\"outlined\"\n                                color={tabIndex === 0 ? 'secondary' : 'primary'}\n                                onClick={() => handleTabChange(0)}\n                                sx={{ mr: 2 }}\n                            >\n                                Demos\n                            </Button>\n                            <Button\n                                variant=\"outlined\"\n                                color={tabIndex === 1 ? 'secondary' : 'primary'}\n                                onClick={() => handleTabChange(1)}\n                            >\n                                Settings\n                            </Button>\n                        </Box>\n\n                        <StyledScrollBar options={{ suppressScrollX: true }}>\n                            {tabIndex === 0 && (\n                                <Box sx={{ mb: 4, mx: 3 }}>\n                                    <Box sx={{ color: secondary }}>Layouts</Box>\n\n                                    <Box display=\"flex\" flexDirection=\"column\">\n                                        {demoLayouts.map((layout) => (\n                                            <LayoutBox\n                                                color=\"secondary\"\n                                                badgeContent={'Pro'}\n                                                invisible={!layout.isPro}\n                                                key={layout.name}\n                                            >\n                                                <Card\n                                                    sx={{\n                                                        position: 'relative',\n                                                    }}\n                                                    onClick={() =>\n                                                        updateSettings(\n                                                            layout.options\n                                                        )\n                                                    }\n                                                    elevation={4}\n                                                >\n                                                    <Box\n                                                        sx={{\n                                                            overflow: 'hidden',\n                                                        }}\n                                                        className=\"layout-name\"\n                                                    >\n                                                        <Button\n                                                            variant=\"contained\"\n                                                            color=\"secondary\"\n                                                        >\n                                                            {layout.name}\n                                                        </Button>\n                                                    </Box>\n\n                                                    <IMG\n                                                        src={layout.thumbnail}\n                                                        alt={layout.name}\n                                                    />\n                                                </Card>\n                                            </LayoutBox>\n                                        ))}\n                                    </Box>\n                                </Box>\n                            )}\n\n                            {/* END LAYOUT */}\n                            {tabIndex === 1 && (\n                                <div>\n                                    <div className=\"helpText\">\n                                        We used React context API to control\n                                        layout. Check out the{' '}\n                                        <Link\n                                            href=\"http://demos.ui-lib.com/matx-react-doc/layout.html\"\n                                            target=\"_blank\"\n                                        >\n                                            Documentation\n                                        </Link>\n                                    </div>\n                                </div>\n                            )}\n                        </StyledScrollBar>\n                    </MaxCustomaizer>\n                </Drawer>\n            </ThemeProvider>\n        </Fragment>\n    )\n}\n\nconst demoLayouts = [\n    {\n        name: 'Light Sidebar',\n        thumbnail: '/assets/images/screenshots/layout1-customizer.png',\n        isPro: false,\n        options: {\n            activeLayout: 'layout1',\n            activeTheme: 'blue',\n            layout1Settings: {\n                leftSidebar: {\n                    mode: 'full',\n                    theme: 'whiteBlue',\n                    bgOpacity: 0.98,\n                },\n                topbar: {\n                    theme: 'blueDark',\n                    fixed: true,\n                },\n            },\n            footer: {\n                theme: 'slateDark1',\n            },\n        },\n    },\n    {\n        name: 'Compact Sidebar',\n        thumbnail: '/assets/images/screenshots/layout5-customizer.png',\n        isPro: false,\n        options: {\n            activeLayout: 'layout1',\n            activeTheme: 'blue',\n            layout1Settings: {\n                leftSidebar: {\n                    mode: 'compact',\n                    theme: 'slateDark1',\n                    bgOpacity: 0.92,\n                },\n                topbar: {\n                    theme: 'whiteBlue',\n                    fixed: true,\n                },\n            },\n        },\n    },\n    {\n        name: 'Dark Sidebar',\n        thumbnail: '/assets/images/screenshots/layout1-blue-customizer.png',\n        isPro: false,\n        options: {\n            activeLayout: 'layout1',\n            activeTheme: 'blue',\n            layout1Settings: {\n                leftSidebar: {\n                    mode: 'full',\n                    theme: 'slateDark1',\n                    bgOpacity: 0.92,\n                },\n                topbar: {\n                    theme: 'blueDark',\n                    fixed: true,\n                },\n            },\n        },\n    },\n]\n\nexport default MatxCustomizer\n","import React from 'react'\nimport { styled, useTheme } from '@mui/system'\nimport { Chatbox } from 'app/components'\nimport { ChatHead } from 'app/components'\nimport { Span } from '../Typography'\nimport { IconButton, Icon } from '@mui/material'\nimport ShoppingCart from '../ShoppingCart/ShoppingCart'\nimport MatxCustomizer from '../MatxCustomizer/MatxCustomizer'\n\nconst SidebarRoot = styled('div')(({ theme, width }) => ({\n    position: 'fixed',\n    height: '100vh',\n    width: width,\n    right: 0,\n    bottom: 0,\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center',\n    boxShadow: theme.shadows[8],\n    backgroundColor: theme.palette.primary.main,\n    zIndex: 98,\n    transition: 'all 0.15s ease',\n    color: theme.palette.text.primary,\n    '@global': {\n        '@media screen and (min-width: 767px)': {\n            '.content-wrap, .layout2.layout-contained, .layout2.layout-full': {\n                marginRight: (props) => props.width,\n            },\n            '.matx-customizer': {\n                right: (props) => props.width,\n            },\n        },\n        '@media screen and (max-width: 959px)': {\n            '.toolbar-menu-wrap .menu-area': {\n                width: (props) => `calc(100% - ${props.width})`,\n            },\n        },\n    },\n}))\n\nconst SecondarySidebarContent = () => {\n    const { palette } = useTheme()\n    const textColor = palette.primary.contrastText\n    return (\n        <SidebarRoot width={'50px'} className=\"secondary-sidebar\">\n            <Span sx={{ m: 'auto' }}></Span>\n            <MatxCustomizer />\n            <ShoppingCart />\n\n            <ChatHead\n                icon={\n                    <IconButton\n                        sx={{ my: '12px', color: textColor }}\n                        size=\"small\"\n                    >\n                        <Icon>comments</Icon>\n                    </IconButton>\n                }\n            >\n                <Chatbox />\n            </ChatHead>\n            <Span sx={{ m: 'auto' }}></Span>\n        </SidebarRoot>\n    )\n}\n\nexport default SecondarySidebarContent\n","import React from 'react'\nimport { ThemeProvider } from '@mui/material'\n\nconst SecondarySidenavTheme = ({ theme, classes, children, open }) => {\n    return <ThemeProvider theme={theme}>{children}</ThemeProvider>\n}\nexport default SecondarySidenavTheme\n","import React from 'react'\nimport useSettings from 'app/hooks/useSettings'\nimport SecondarySidebarToggle from './SecondarySidebarToggle'\nimport SecondarySidebarContent from './SecondarySidebarContent'\nimport SecondarySidenavTheme from '../MatxTheme/SecondarySidenavTheme/SecondarySidenavTheme'\n\nconst SecondarySidebar = () => {\n    const { settings } = useSettings()\n    const secondarySidebarTheme =\n        settings.themes[settings.secondarySidebar.theme]\n\n    return (\n        <SecondarySidenavTheme theme={secondarySidebarTheme}>\n            {settings.secondarySidebar.open && <SecondarySidebarContent />}\n            <SecondarySidebarToggle />\n        </SecondarySidenavTheme>\n    )\n}\n\nexport default SecondarySidebar\n","import Footer from '../../Footer/Footer'\nimport Layout1Topbar from './Layout1Topbar'\nimport { MatxSuspense } from 'app/components'\nimport Layout1Sidenav from './Layout1Sidenav'\nimport Scrollbar from 'react-perfect-scrollbar'\nimport useSettings from 'app/hooks/useSettings'\nimport { styled, Box, useTheme } from '@mui/system'\nimport React, { useEffect, useRef } from 'react'\nimport { ThemeProvider, useMediaQuery } from '@mui/material'\nimport SidenavTheme from '../../MatxTheme/SidenavTheme/SidenavTheme'\nimport SecondarySidebar from '../../SecondarySidebar/SecondarySidebar'\nimport { sidenavCompactWidth, sideNavWidth } from 'app/utils/constant'\nimport { Outlet } from 'react-router-dom'\n\nconst Layout1Root = styled(Box)(({ theme }) => ({\n    display: 'flex',\n    background: theme.palette.background.default,\n}))\n\nconst ContentBox = styled(Box)(() => ({\n    height: '100%',\n    display: 'flex',\n    overflowY: 'auto',\n    overflowX: 'hidden',\n    flexDirection: 'column',\n    justifyContent: 'space-between',\n}))\n\nconst StyledScrollBar = styled(Scrollbar)(() => ({\n    height: '100%',\n    position: 'relative',\n    display: 'flex',\n    flexGrow: '1',\n    flexDirection: 'column',\n}))\n\nconst LayoutContainer = styled(Box)(({ width, secondarySidebar }) => ({\n    height: '100vh',\n    display: 'flex',\n    flexGrow: '1',\n    flexDirection: 'column',\n    verticalAlign: 'top',\n    marginLeft: width,\n    position: 'relative',\n    overflow: 'hidden',\n    transition: 'all 0.3s ease',\n    marginRight: secondarySidebar.open ? 50 : 0,\n}))\n\nconst Layout1 = () => {\n    const { settings, updateSettings } = useSettings()\n    const { layout1Settings, secondarySidebar } = settings\n    const topbarTheme = settings.themes[layout1Settings.topbar.theme]\n    const {\n        leftSidebar: { mode: sidenavMode, show: showSidenav },\n    } = layout1Settings\n\n    const getSidenavWidth = () => {\n        switch (sidenavMode) {\n            case 'full':\n                return sideNavWidth\n            case 'compact':\n                return sidenavCompactWidth\n            default:\n                return '0px'\n        }\n    }\n\n    const sidenavWidth = getSidenavWidth()\n    const theme = useTheme()\n    const isMdScreen = useMediaQuery(theme.breakpoints.down('md'))\n\n    const ref = useRef({ isMdScreen, settings })\n    const layoutClasses = `theme-${theme.palette.type}`\n\n    useEffect(() => {\n        let { settings } = ref.current\n        let sidebarMode = settings.layout1Settings.leftSidebar.mode\n        if (settings.layout1Settings.leftSidebar.show) {\n            let mode = isMdScreen ? 'close' : sidebarMode\n            updateSettings({ layout1Settings: { leftSidebar: { mode } } })\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [isMdScreen])\n\n    return (\n        <Layout1Root className={layoutClasses}>\n            {showSidenav && sidenavMode !== 'close' && (\n                <SidenavTheme>\n                    <Layout1Sidenav />\n                </SidenavTheme>\n            )}\n\n            <LayoutContainer\n                width={sidenavWidth}\n                secondarySidebar={secondarySidebar}\n            >\n                {layout1Settings.topbar.show && layout1Settings.topbar.fixed && (\n                    // <Layout1Topbar fixed={true} />\n                    <ThemeProvider theme={topbarTheme}>\n                        <Layout1Topbar fixed={true} className=\"elevation-z8\" />\n                    </ThemeProvider>\n                )}\n                {settings.perfectScrollbar && (\n                    <StyledScrollBar>\n                        {layout1Settings.topbar.show &&\n                            !layout1Settings.topbar.fixed && (\n                                // <Layout1Topbar />\n                                <ThemeProvider theme={topbarTheme}>\n                                    <Layout1Topbar />\n                                </ThemeProvider>\n                            )}\n                        <Box flexGrow={1} position=\"relative\">\n                            <MatxSuspense>\n                                {/* {renderRoutes(routes)} */}\n                                <Outlet />\n                            </MatxSuspense>\n                        </Box>\n                        {settings.footer.show && !settings.footer.fixed && (\n                            <Footer />\n                        )}\n                    </StyledScrollBar>\n                )}\n\n                {!settings.perfectScrollbar && (\n                    <ContentBox>\n                        {layout1Settings.topbar.show &&\n                            !layout1Settings.topbar.fixed && (\n                                // <Layout1Topbar />\n                                <ThemeProvider theme={topbarTheme}>\n                                    <Layout1Topbar />\n                                </ThemeProvider>\n                            )}\n                        <Box flexGrow={1} position=\"relative\">\n                            <MatxSuspense>\n                                {/* {renderRoutes(routes)} */}\n                                <Outlet />\n                            </MatxSuspense>\n                        </Box>\n                        {settings.footer.show && !settings.footer.fixed && (\n                            <Footer />\n                        )}\n                    </ContentBox>\n                )}\n\n                {settings.footer.show && settings.footer.fixed && <Footer />}\n            </LayoutContainer>\n            {settings.secondarySidebar.show && <SecondarySidebar />}\n        </Layout1Root>\n    )\n}\n\nexport default React.memo(Layout1)\n"],"sourceRoot":""}